<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.VoteBatchMapper">
  <resultMap id="BaseResultMap" type="com.model.VoteBatch">
    <id column="batch_id" jdbcType="INTEGER" property="batchId" />
    <result column="batch_name" jdbcType="VARCHAR" property="batchName" />
    <result column="batch_group" jdbcType="VARCHAR" property="batchGroup" />
    <result column="question_num" jdbcType="INTEGER" property="questionNum" />
    <result column="user_num" jdbcType="INTEGER" property="userNum" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    batch_id, batch_name, batch_group, question_num, user_num, end_time
  </sql>
  <select id="selectByExample" parameterType="com.model.VoteBatchExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from vote_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from vote_batch
    where batch_id = #{batchId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from vote_batch
    where batch_id = #{batchId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.VoteBatchExample">
    delete from vote_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.VoteBatch">
    insert into vote_batch (batch_id, batch_name, batch_group, question_num, user_num, end_time)
    values (#{batchId,jdbcType=INTEGER}, #{batchName,jdbcType=VARCHAR}, #{batchGroup,jdbcType=VARCHAR},
      #{questionNum,jdbcType=INTEGER}, #{userNum,jdbcType=INTEGER}, #{endTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.model.VoteBatch">
    insert into vote_batch
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="batch_id != null">
        batchId,
      </if>
      <if test="batch_name != null">
        batchName,
      </if>
      <if test="batch_group != null">
        batchGroup,
      </if>
      <if test="question_num != null">
        questionNum,
      </if>
      <if test="user_num != null">
        userNum,
      </if>
      <if test="end_time != null">
        endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="batch_id != null">
        #{batchId,jdbcType=INTEGER},
      </if>
      <if test="batch_name != null">
        #{batchName,jdbcType=VARCHAR},
      </if>
      <if test="batch_group != null">
        #{batchGroup,jdbcType=VARCHAR},
      </if>
      <if test="question_num != null">
        #{questionNum,jdbcType=INTEGER},
      </if>
      <if test="user_num != null">
        #{userNum,jdbcType=INTEGER},
      </if>
      <if test="end_time != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.VoteBatchExample" resultType="java.lang.Long">
    select count(*) from vote_batch
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update vote_batch
    <set>
      <if test="record.batchId != null">
        batch_id = #{record.batchId,jdbcType=INTEGER},
      </if>
      <if test="record.batchName != null">
        batch_name = #{record.batchName,jdbcType=VARCHAR},
      </if>
      <if test="record.batchGroup != null">
        batch_group = #{record.batchGroup,jdbcType=VARCHAR},
      </if>
      <if test="record.questionNum != null">
        question_num = #{record.questionNum,jdbcType=INTEGER},
      </if>
      <if test="record.userNum != null">
        user_num = #{record.userNum,jdbcType=INTEGER},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update vote_batch
    set batch_id = #{record.batchId,jdbcType=INTEGER},
    batch_name = #{record.batchName,jdbcType=VARCHAR},
    batch_group = #{record.batchGroup,jdbcType=VARCHAR},
    question_num = #{record.questionNum,jdbcType=INTEGER},
    user_num = #{record.userNum,jdbcType=INTEGER},
    end_time = #{record.endTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateEndTimeByPrimaryKeySelective" parameterType="com.model.VoteBatch">
    update vote_batch
    <set>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where batch_id = #{batchId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.VoteBatch">
    update vote_batch
    set batch_name = #{batchName,jdbcType=VARCHAR},
      batch_group = #{batchGroup,jdbcType=VARCHAR},
      question_num = #{questionNum,jdbcType=INTEGER},
      user_num = #{userNum,jdbcType=INTEGER},
      end_time = #{endTime,jdbcType=TIMESTAMP}
    where batch_id = #{batchId,jdbcType=INTEGER}
  </update>
  <select id="selectByBatchName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vote_batch
    where batch_name = #{batchName,jdbcType=VARCHAR}
  </select>
  <select id="selectLikeBatchName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from vote_batch
    where batch_name like CONCAT('%','${batchName}','%' )
  </select>
</mapper>