<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dao.UserMapper">
  <resultMap id="BaseResultMap" type="com.model.User">
    <id column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="identity_card" jdbcType="VARCHAR" property="identityCard" />
    <result column="mobile_phone" jdbcType="VARCHAR" property="mobilePhone" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="is_freeze" jdbcType="BIT" property="isFreeze" />
    <result column="sign_number" jdbcType="INTEGER" property="signNumber" />
    <result column="sign_time" jdbcType="TIMESTAMP" property="signTime" />
    <result column="kind_group" jdbcType="VARCHAR" property="kindGroup" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    user_name, password, real_name, identity_card, mobile_phone, email, is_freeze, sign_number, 
    sign_time, kind_group
  </sql>
  <select id="selectByExample" parameterType="com.model.UserExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from user
    where user_name = #{userName,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.model.UserExample">
    delete from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.model.User">
    insert into user (user_name, password, real_name, 
      identity_card, mobile_phone, email, 
      is_freeze, sign_number, sign_time,kind_group
      )
    values (#{userName,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, 
      #{identityCard,jdbcType=VARCHAR}, #{mobilePhone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{isFreeze,jdbcType=BIT}, #{signNumber,jdbcType=INTEGER}, #{signTime,jdbcType=TIMESTAMP},
      #{kindGroup,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.model.User">
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="identityCard != null">
        identity_card,
      </if>
      <if test="mobilePhone != null">
        mobile_phone,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="isFreeze != null">
        is_freeze,
      </if>
      <if test="signNumber != null">
        sign_number,
      </if>
      <if test="signTime != null">
        sign_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null">
        #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="isFreeze != null">
        #{isFreeze,jdbcType=BIT},
      </if>
      <if test="signNumber != null">
        #{signNumber,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        #{signTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.model.UserExample" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update user
    <set>
      <if test="record.userName != null">
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.realName != null">
        real_name = #{record.realName,jdbcType=VARCHAR},
      </if>
      <if test="record.identityCard != null">
        identity_card = #{record.identityCard,jdbcType=VARCHAR},
      </if>
      <if test="record.mobilePhone != null">
        mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.email != null">
        email = #{record.email,jdbcType=VARCHAR},
      </if>
      <if test="record.isFreeze != null">
        is_freeze = #{record.isFreeze,jdbcType=BIT},
      </if>
      <if test="record.signNumber != null">
        sign_number = #{record.signNumber,jdbcType=INTEGER},
      </if>
      <if test="record.signTime != null">
        sign_time = #{record.signTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update user
    set user_name = #{record.userName,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      real_name = #{record.realName,jdbcType=VARCHAR},
      identity_card = #{record.identityCard,jdbcType=VARCHAR},
      mobile_phone = #{record.mobilePhone,jdbcType=VARCHAR},
      email = #{record.email,jdbcType=VARCHAR},
      is_freeze = #{record.isFreeze,jdbcType=BIT},
      sign_number = #{record.signNumber,jdbcType=INTEGER},
      sign_time = #{record.signTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.model.User">
    update user
    <set>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="identityCard != null">
        identity_card = #{identityCard,jdbcType=VARCHAR},
      </if>
      <if test="mobilePhone != null">
        mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="isFreeze != null">
        is_freeze = #{isFreeze,jdbcType=BIT},
      </if>
      <if test="signNumber != null">
        sign_number = #{signNumber,jdbcType=INTEGER},
      </if>
      <if test="signTime != null">
        sign_time = #{signTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.model.User">
    update user
    set password = #{password,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      identity_card = #{identityCard,jdbcType=VARCHAR},
      mobile_phone = #{mobilePhone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      is_freeze = #{isFreeze,jdbcType=BIT},
      sign_number = #{signNumber,jdbcType=INTEGER},
      sign_time = #{signTime,jdbcType=TIMESTAMP}
    where user_name = #{userName,jdbcType=VARCHAR}
  </update>
    <update id="updateArrearage" parameterType="com.model.User">
        update user
        set
        arrearage = #{arrearage,jdbcType=VARCHAR}
        where user_name = #{userName,jdbcType=DECIMAL}
    </update>
  <update id="updateDeposit" parameterType="com.model.User">
    update user
    set
    deposit = #{deposit,jdbcType=VARCHAR}
    where user_name = #{userName,jdbcType=DECIMAL}
  </update>
</mapper>